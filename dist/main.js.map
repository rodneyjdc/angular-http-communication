{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/add-book/add-book.component.ts","./src/app/add-reader/add-reader.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/add-header.interceptor.ts","./src/app/core/badge.service.ts","./src/app/core/book-tracker-error-handler.service.ts","./src/app/core/books-resolver.service.ts","./src/app/core/cache.interceptor.ts","./src/app/core/data.service.ts","./src/app/core/http-cache.service.ts","./src/app/core/log-response.interceptor.ts","./src/app/dashboard/dashboard.component.ts","./src/app/data.ts","./src/app/edit-book/edit-book.component.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/models/bookTrackerError.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.css","./src/app/add-book/add-book.component.html","./src/app/add-reader/add-reader.component.html","./src/app/app.component.html","./src/app/dashboard/dashboard.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'app/core/data.service';\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styles: []\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveBook(formValues: any): void {\r\n    let newBook: Book = <Book>formValues;\r\n    newBook.bookID = 0;\r\n    console.log(newBook);\r\n\r\n    this.dataService.addBook(newBook)\r\n      .subscribe(\r\n        (data: Book) => console.log(data),\r\n        (err: any) => console.log(err)\r\n      );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'app/core/data.service';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\n\r\n@Component({\r\n  selector: 'app-add-reader',\r\n  templateUrl: './add-reader.component.html',\r\n  styles: []\r\n})\r\nexport class AddReaderComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveReader(formValues: any): void {\r\n    let newReader: Reader = <Reader>formValues;\r\n    newReader.readerID = 0;\r\n    console.log('Before POST request', newReader);\r\n\r\n    this.dataService.addReader(newReader)\r\n      .subscribe(\r\n        (data: Reader) => console.log('After POST request', data),\r\n        (err: any) => console.log(err)\r\n      );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\r\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\r\nimport { BooksResolverService } from './core/books-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent, resolve: {resolvedBooks: BooksResolverService} },\r\n  { path: 'addbook', component: AddBookComponent },\r\n  { path: 'addreader', component: AddReaderComponent },\r\n  { path: 'editreader/:id', component: EditReaderComponent },\r\n  { path: 'editbook/:id', component: EditBookComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AddBookComponent } from './add-book/add-book.component';\r\nimport { AddReaderComponent } from './add-reader/add-reader.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditBookComponent } from './edit-book/edit-book.component';\r\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\r\nimport { BookTrackerErrorHandlerService } from './core/book-tracker-error-handler.service';\r\nimport { AddHeaderInterceptor } from './core/add-header.interceptor';\r\nimport { LogResponseInterceptor } from './core/log-response.interceptor';\r\nimport { CacheInterceptor } from './core/cache.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddBookComponent,\r\n    EditReaderComponent,\r\n    EditBookComponent,\r\n    AddReaderComponent\r\n  ],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LogResponseInterceptor, multi: true},\r\n    { provide: HTTP_INTERCEPTORS, useClass: AddHeaderInterceptor, multi: true},\r\n    { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true}\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpContextToken, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport const CONTENT_TYPE = new HttpContextToken(() => 'application/json');\r\n\r\n@Injectable()\r\nexport class AddHeaderInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.log(`AddHeaderInterceptor - ${req.url}`);\r\n\r\n        let jsonReq: HttpRequest<any> = req.clone({\r\n            setHeaders: {\r\n                'Content-Type': req.context.get(CONTENT_TYPE)\r\n            }\r\n        });\r\n\r\n        return next.handle(jsonReq);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BadgeService {\r\n\r\n  constructor() { }\r\n\r\n  getReaderBadge(minutesRead: number): string {\r\n\r\n    if (minutesRead > 5000) {\r\n      return 'Book Worm';\r\n    }\r\n    else if (minutesRead > 2500) {\r\n      return 'Page Turner';\r\n    }\r\n    else {\r\n      return 'Getting Started';\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Injectable()\r\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\r\n\r\n  handleError(error: any): void {\r\n    let customError: BookTrackerError = new BookTrackerError();\r\n    customError.errorNumber = 200;\r\n    customError.message = (<Error>error).message;\r\n    customError.friendlyMessage = 'An error occurred. Please try again.';\r\n\r\n    console.log(customError);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\n\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\nimport { DataService } from \"./data.service\";\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BooksResolverService implements Resolve<Book[] | BookTrackerError> {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Book[] | BookTrackerError> {\r\n        return this.dataService.getAllBooks()\r\n            .pipe(\r\n                catchError(err => of(err))\r\n            );\r\n    }\r\n}","import { HttpContextToken, HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpCacheService } from './http-cache.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport const CACHEABLE = new HttpContextToken(() => true);\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private cacheService: HttpCacheService) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        // only cache requests configured to be cacheable\r\n        if (!req.context.get(CACHEABLE)) {\r\n            console.log(`The request is not cacheable: ${req.url}`);\r\n            return next.handle(req);\r\n        }\r\n        \r\n        // pass along non-cacheable requests and invalidate cache\r\n        if (req.method !== 'GET') {\r\n            console.log(`Invalidating cache: ${req.method} ${req.url}`);\r\n            this.cacheService.invalidateCache();\r\n\r\n            return next.handle(req);\r\n        }\r\n\r\n        // attempt to retrieve a cached response\r\n        let cachedResponse: HttpResponse<any> = this.cacheService.get(req.url);\r\n\r\n        // return cached response\r\n        if (cachedResponse) {\r\n            console.log(`Returning cached response: ${req.url}`);\r\n            console.log(cachedResponse);\r\n            return of(cachedResponse);\r\n        }\r\n\r\n        // send request to server and add response to cache\r\n        return next.handle(req)\r\n            .pipe(\r\n                tap(event => {\r\n                    if (event instanceof HttpResponse) {\r\n                        console.log(`Adding item to cache: ${req.url}`)\r\n                        this.cacheService.put(req.url, event);\r\n                    }\r\n                })\r\n            );\r\n\r\n    }\r\n\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpContext, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\n\r\nimport { allBooks, allReaders } from 'app/data';\r\nimport { Reader } from \"app/models/reader\";\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\nimport { OldBook } from 'app/models/oldBook';\r\nimport { CONTENT_TYPE } from './add-header.interceptor';\r\nimport { CACHEABLE } from './cache.interceptor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  mostPopularBook: Book = allBooks[0];\r\n\r\n  setMostPopularBook(popularBook: Book): void {\r\n    this.mostPopularBook = popularBook;\r\n  }\r\n\r\n  getAllReaders(): Observable<Reader[]> {\r\n    // return allReaders;\r\n\r\n    console.log('Getting all readers.');\r\n    \r\n    return this.http.get<Reader[]>('api/readers');\r\n  }\r\n\r\n  getReaderById(id: number): Observable<Reader> {\r\n    // return allReaders.find(reader => reader.readerID === id);\r\n\r\n    const getHeaders: HttpHeaders = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n      'Authorization': 'my-token2'\r\n    });\r\n\r\n    return this.http.get<Reader>(`api/readers/${id}`, {\r\n      headers: getHeaders\r\n    });\r\n  }\r\n\r\n  addReader(newReader: Reader): Observable<Reader> {\r\n    const postHeaders: HttpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    return this.http.post<Reader>('api/readers', newReader, {\r\n      headers: postHeaders\r\n    });\r\n  }\r\n\r\n  updatedReader(updatedReader: Reader): Observable<void> {\r\n    const putHeaders: HttpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    return this.http.put<void>(`api/readers/${updatedReader.readerID}`, updatedReader, {\r\n      headers: putHeaders\r\n    });\r\n  }\r\n\r\n  deleteReader(readerId: number): Observable<void> {\r\n    return this.http.delete<void>(`api/readers/${readerId}`);\r\n  }\r\n\r\n  getAllBooks(): Observable<Book[] | BookTrackerError> {\r\n    // return allBooks;\r\n\r\n    console.log('Getting all books.');\r\n\r\n    let myContext: HttpContext = new HttpContext();\r\n    myContext.set(CONTENT_TYPE, 'application/xml');\r\n    myContext.set(CACHEABLE, false);\r\n\r\n    return this.http.get<Book[]>('api/books', {\r\n      context: myContext\r\n    })\r\n      .pipe(\r\n        catchError(err => this.handleHttpError(err))\r\n      );\r\n  }\r\n\r\n  getBookById(id: number): Observable<Book> {\r\n    // return allBooks.find(book => book.bookID === id);\r\n    const getHeaders: HttpHeaders = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n      'Authorization': 'my-token'\r\n    });\r\n\r\n    return this.http.get<Book>(`api/books/${id}`, {\r\n      headers: getHeaders\r\n    });\r\n  }  \r\n\r\n  getOldBookById(id: number): Observable<OldBook> {\r\n    return this.http.get<Book>(`api/books/${id}`)\r\n      .pipe(\r\n        map(book => <OldBook>{\r\n          bookTitle: book.title,\r\n          year: book.publicationYear\r\n        }),\r\n        tap(oldBook => console.log(oldBook))\r\n      );\r\n  }\r\n\r\n  addBook(newBook: Book): Observable<Book> {\r\n    const postHeaders: HttpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    return this.http.post<Book>('api/books', newBook, {\r\n      headers: postHeaders\r\n    });\r\n  }\r\n\r\n  updateBook(updatedBook: Book): Observable<void> {\r\n    const putHeaders: HttpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    return this.http.put<void>(`api/books/${updatedBook.bookID}`, updatedBook, {\r\n      headers: putHeaders\r\n    });\r\n  }\r\n\r\n  deleteBook(bookId: number): Observable<void> {\r\n    return this.http.delete<void>(`api/books/${bookId}`);\r\n  }\r\n\r\n  private handleHttpError(error: HttpErrorResponse): Observable<BookTrackerError> {\r\n    let dataError = new BookTrackerError();\r\n    dataError.errorNumber = 100;\r\n    dataError.message = error.statusText;\r\n    dataError.friendlyMessage = 'An error occurred while retrieving data.';\r\n\r\n    return throwError(dataError);\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpCacheService {\n\n  private requests: any = {};\n\n  constructor() { }\n\n  put(url: string, response: HttpResponse<any>): void {\n    this.requests[url] = response;\n  }\n\n  get(url: string): HttpResponse<any> | undefined {\n    return this.requests[url];\n  }\n\n  invalidateUrl(url: string): void {\n    this.requests[url] = undefined;\n  }\n\n  invalidateCache(): void {\n    this.requests = {};\n  }\n}\n","import { HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LogResponseInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.log(`LogResponseInterceptor - ${req.url}`);\r\n\r\n        return next.handle(req)\r\n            .pipe(\r\n                tap(event => {\r\n                    if (event.type === HttpEventType.Response) {\r\n                        console.log(`LogResponseInterceptor - `, event.body);\r\n                    };\r\n                })\r\n            );\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: []\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  allBooks: Book[];\r\n  allReaders: Reader[];\r\n  mostPopularBook: Book;\r\n\r\n  constructor(private dataService: DataService,\r\n              private title: Title,\r\n              private route: ActivatedRoute) { }\r\n  \r\n  ngOnInit() {\r\n    // this.dataService.getAllBooks()\r\n    //   .subscribe(\r\n    //     (data: Book[] | BookTrackerError) => this.allBooks = <Book[]>data, // we can cast data because a success will return array of Book\r\n    //     (err: BookTrackerError) => console.log(err), // we are throwing a BookTrackerError object in the error handler\r\n    //     () => console.log('All done getting books.')\r\n    //   );\r\n\r\n    let resolvedData: Book[] | BookTrackerError = this.route.snapshot.data['resolvedBooks'];\r\n    if (resolvedData instanceof BookTrackerError) {\r\n      console.log(`Dashboard component error: ${resolvedData.friendlyMessage}`);\r\n    } else {\r\n      console.log('Providing all books to dashboard.')\r\n      this.allBooks = resolvedData;\r\n    }\r\n\r\n    this.dataService.getAllReaders()\r\n      .subscribe(\r\n        (data: Reader[]) => {\r\n          this.allReaders = data;\r\n          console.log('List of readers', data);\r\n        },\r\n        (err: any) => console.log(err),\r\n        () => console.log('All done getting readers')\r\n      );\r\n    this.mostPopularBook = this.dataService.mostPopularBook;\r\n\r\n    this.title.setTitle(`Book Tracker`);\r\n  }\r\n\r\n  deleteBook(bookID: number): void {\r\n    this.dataService.deleteBook(bookID)\r\n      .subscribe(\r\n        (data: void) => {\r\n          let index = this.allBooks.findIndex(book => book.bookID === bookID);\r\n          this.allBooks.splice(index, 1);\r\n        },\r\n        (err: any) => console.log(err)\r\n      );\r\n  }\r\n\r\n  deleteReader(readerID: number): void {\r\n    this.dataService.deleteReader(readerID)\r\n      .subscribe(\r\n        (data: void) => {\r\n          console.log('Reader was successfully deleted.');\r\n          this.allReaders = this.allReaders.filter(reader => reader.readerID !== readerID);\r\n        },\r\n        (err: any) => console.log(err)\r\n      );\r\n  }\r\n\r\n}\r\n","import { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nexport const allReaders: Reader[] = [\r\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\r\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\r\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\r\n  ];\r\n\r\nexport const allBooks: Book[] = [\r\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\r\n    { bookID: 2, title: 'Winnie-the-Pooh', author: 'A. A. Milne', publicationYear: 1926 },\r\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\r\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\r\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\r\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Book } from 'app/models/book';\r\nimport { DataService } from 'app/core/data.service';\r\nimport { OldBook } from 'app/models/oldBook';\r\n\r\n@Component({\r\n  selector: 'app-edit-book',\r\n  templateUrl: './edit-book.component.html',\r\n  styles: []\r\n})\r\nexport class EditBookComponent implements OnInit {\r\n\r\n  selectedBook: Book;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\r\n    this.dataService.getBookById(bookID)\r\n      .subscribe(\r\n        (data: Book) => this.selectedBook = data,\r\n        (err: any) => console.log(err)\r\n      );\r\n\r\n    this.dataService.getOldBookById(bookID)\r\n      .subscribe(\r\n        (data: OldBook) => console.log(`Old book title is ${data.bookTitle}`)\r\n      );\r\n  }\r\n\r\n  setMostPopular(): void {\r\n    this.dataService.setMostPopularBook(this.selectedBook);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.dataService.updateBook(this.selectedBook)\r\n      .subscribe(\r\n        (data: void) => console.log(`${this.selectedBook.title} successfully updated`),\r\n        (err: any) => console.log(err)\r\n      )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BadgeService } from 'app/core/badge.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-reader',\r\n  templateUrl: './edit-reader.component.html',\r\n  styles: [],\r\n  providers: [BadgeService]\r\n})\r\nexport class EditReaderComponent implements OnInit {\r\n\r\n  selectedReader: Reader;\r\n  currentBadge: string;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService,\r\n              private badgeService: BadgeService) { }\r\n\r\n  ngOnInit() {\r\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\r\n\r\n    // this.selectedReader = this.dataService.getReaderById(readerID);\r\n    this.dataService.getReaderById(readerID)\r\n      .subscribe(\r\n        (data: Reader) => {\r\n          this.selectedReader = data;\r\n          console.log('Selected reader', data);\r\n        },\r\n        (err: any) => console.log(err)\r\n      )\r\n\r\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\r\n  }\r\n\r\n  saveChanges() {\r\n    this.dataService.updatedReader(this.selectedReader)\r\n      .subscribe(\r\n        (data: void) => console.log(`Reader ${this.selectedReader.name} successfully updated.`),\r\n        (err: any) => console.log(err)\r\n      );\r\n  }\r\n}\r\n","export class BookTrackerError {\r\n  errorNumber: number;\r\n  message: string;\r\n  friendlyMessage: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add New Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\r\\n        </div>\\r\\n\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\r\\n            </ul>\\r\\n        </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let book of allBooks'>\\r\\n          <i>{{book.title}}</i>\\r\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\r\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let reader of allReaders'>\\r\\n          {{reader.name}}\\r\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook && selectedBook.title\\\" name=\\\"title\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook && selectedBook.author\\\" name=\\\"author\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            {{ currentBadge }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";"],"sourceRoot":"webpack:///"}